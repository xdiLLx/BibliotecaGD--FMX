unit GDTabs;

interface

uses
  System.SysUtils, System.Classes, Vcl.Controls, Vcl.Forms,
  ChromeTabs, ChromeTabsClasses, ChromeTabsTypes;

type
  TGDTabs = class(TChromeTabs)
  private
    FPageControl: TPageControl;
    procedure SetPageControl(const Value: TPageControl);
  public
    constructor Create(AOwner: TComponent); override;
    destructor Destroy; override;
    procedure AbrirFormulario(FormClass: TFormClass; const ATitle: string);
  published
    property PageControl: TPageControl read FPageControl write SetPageControl;
  end;

procedure Register;

implementation

procedure Register;
begin
  RegisterComponents('Delphi | Biblioteca GD', [TGDTabs]);
end;

{ TGDTabs }

constructor TGDTabs.Create(AOwner: TComponent);
begin
  inherited;
  // Inicializações conforme necessário
end;

destructor TGDTabs.Destroy;
begin
  // Libera recursos conforme necessário
  inherited;
end;

procedure TGDTabs.AbrirFormulario(FormClass: TFormClass; const ATitle: string);
var
  TabSheet: TTabSheet;
  Form: TForm;
begin
  if Assigned(FPageControl) then
  begin
    TabSheet := TTabSheet.Create(Self);
    TabSheet.PageControl := FPageControl;
    TabSheet.Caption := ATitle;
    Form := FormClass.Create(TabSheet);
    Form.Parent := TabSheet;
    Form.Align := alClient;
    Form.BorderStyle := bsNone;
    Form.Show;
    FPageControl.ActivePage := TabSheet;
  end;
end;

procedure TGDTabs.SetPageControl(const Value: TPageControl);
begin
  if FPageControl <> Value then
  begin
    FPageControl := Value;
    // Adicione aqui qualquer código necessário para sincronizar com o PageControl
  end;
end;

end.

